plugins {
    id('com.github.johnrengelman.shadow') version '7.1.2'
    id('io.micronaut.application') version '3.7.10'
}

version = '0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation('jakarta.annotation:jakarta.annotation-api')
    implementation('org.json:json:20230227')
    implementation('com.google.guava:guava:31.1-jre')

    runtimeOnly('ch.qos.logback:logback-classic')
}

application {
    mainClass.set('mymusic.Application')
}

java {
    sourceCompatibility = JavaVersion.toVersion('17')
    targetCompatibility = JavaVersion.toVersion('17')
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime('jetty')
    testRuntime('junit5')
    processing {
        incremental(true)
        annotations('mymusic.*')
    }
}

tasks.named('dockerfileNative') {
    editDockerfile {
        after('COPY --from=graalvm /home/app/application /app/application') {
            insert('COPY --from=graalvm /home/app/resources/dist /app/dist')
        }
    }
}


task cleanUpDist(type: Delete) {
   delete files("src/main/resources/dist")
}

tasks.register('copyClientDist', Copy, {
    dependsOn tasks.cleanUpDist

    from(file('../client/dist/'))
    into(file('src/main/resources/dist'))
})

processResources {
  doFirst {
        def command = "xcopy /S /I /Q /Y /F ..\\client\\dist src\\main\\resources\\dist"   // failed to add command "del /q/s src\\main\\resources\\dist && "
        Runtime.runtime.exec(command).waitFor()
    }
}